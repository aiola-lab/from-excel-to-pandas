Traceback (most recent call last):
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/guy/miniconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import io
f = io.BytesIO()
scaled_df.to_parquet(f)
    

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mImportError[0m                               Traceback (most recent call last)
[0;32m<ipython-input-27-fc2ae1f72c00>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;32mimport[0m [0mio[0m[0;34m[0m[0;34m[0m[0m
[1;32m      2[0m [0mf[0m [0;34m=[0m [0mio[0m[0;34m.[0m[0mBytesIO[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 3[0;31m [0mscaled_df[0m[0;34m.[0m[0mto_parquet[0m[0;34m([0m[0mf[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      4[0m [0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/util/_decorators.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m    197[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m                     [0mkwargs[0m[0;34m[[0m[0mnew_arg_name[0m[0;34m][0m [0;34m=[0m [0mnew_arg_value[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 199[0;31m             [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    200[0m [0;34m[0m[0m
[1;32m    201[0m         [0;32mreturn[0m [0mcast[0m[0;34m([0m[0mF[0m[0;34m,[0m [0mwrapper[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/core/frame.py[0m in [0;36mto_parquet[0;34m(self, path, engine, compression, index, partition_cols, **kwargs)[0m
[1;32m   2363[0m         [0;32mfrom[0m [0mpandas[0m[0;34m.[0m[0mio[0m[0;34m.[0m[0mparquet[0m [0;32mimport[0m [0mto_parquet[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2364[0m [0;34m[0m[0m
[0;32m-> 2365[0;31m         to_parquet(
[0m[1;32m   2366[0m             [0mself[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2367[0m             [0mpath[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/io/parquet.py[0m in [0;36mto_parquet[0;34m(df, path, engine, compression, index, partition_cols, **kwargs)[0m
[1;32m    267[0m     [0;32mif[0m [0misinstance[0m[0;34m([0m[0mpartition_cols[0m[0;34m,[0m [0mstr[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    268[0m         [0mpartition_cols[0m [0;34m=[0m [0;34m[[0m[0mpartition_cols[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 269[0;31m     [0mimpl[0m [0;34m=[0m [0mget_engine[0m[0;34m([0m[0mengine[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    270[0m     return impl.write(
[1;32m    271[0m         [0mdf[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/io/parquet.py[0m in [0;36mget_engine[0;34m(engine)[0m
[1;32m     29[0m                 [0merror_msgs[0m [0;34m+=[0m [0;34m"\n - "[0m [0;34m+[0m [0mstr[0m[0;34m([0m[0merr[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m [0;34m[0m[0m
[0;32m---> 31[0;31m         raise ImportError(
[0m[1;32m     32[0m             [0;34m"Unable to find a usable engine; "[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m             [0;34m"tried using: 'pyarrow', 'fastparquet'.\n"[0m[0;34m[0m[0;34m[0m[0m

[0;31mImportError[0m: Unable to find a usable engine; tried using: 'pyarrow', 'fastparquet'.
A suitable version of pyarrow or fastparquet is required for parquet support.
Trying to import the above resulted in these errors:
 - Missing optional dependency 'pyarrow'. pyarrow is required for parquet support. Use pip or conda to install pyarrow.
 - Missing optional dependency 'fastparquet'. fastparquet is required for parquet support. Use pip or conda to install fastparquet.
ImportError: Unable to find a usable engine; tried using: 'pyarrow', 'fastparquet'.
A suitable version of pyarrow or fastparquet is required for parquet support.
Trying to import the above resulted in these errors:
 - Missing optional dependency 'pyarrow'. pyarrow is required for parquet support. Use pip or conda to install pyarrow.
 - Missing optional dependency 'fastparquet'. fastparquet is required for parquet support. Use pip or conda to install fastparquet.

