Traceback (most recent call last):
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/guy/miniconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df = (
    pd
    .read_html('https://www.exchange-rates.org/history/ILS/USD/T')
    [0]
    .rename(columns = {0 : 'Date', 1: 'Day', 2 : 'Rate', 3 : 'Notes'})
    .assign(Rate = lambda x : x.Rate.str.replace('[^\d\.]','',regex=True).astype(float))
)
df
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-11-cb9d524492fc>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m df = (
[0;32m----> 2[0;31m     [0mpd[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m     [0;34m.[0m[0mread_html[0m[0;34m([0m[0;34m'https://www.exchange-rates.org/history/ILS/USD/T'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m     [0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m     [0;34m.[0m[0mrename[0m[0;34m([0m[0mcolumns[0m [0;34m=[0m [0;34m{[0m[0;36m0[0m [0;34m:[0m [0;34m'Date'[0m[0;34m,[0m [0;36m1[0m[0;34m:[0m [0;34m'Day'[0m[0;34m,[0m [0;36m2[0m [0;34m:[0m [0;34m'Rate'[0m[0;34m,[0m [0;36m3[0m [0;34m:[0m [0;34m'Notes'[0m[0;34m}[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/core/frame.py[0m in [0;36massign[0;34m(self, **kwargs)[0m
[1;32m   3692[0m [0;34m[0m[0m
[1;32m   3693[0m         [0;32mfor[0m [0mk[0m[0;34m,[0m [0mv[0m [0;32min[0m [0mkwargs[0m[0;34m.[0m[0mitems[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 3694[0;31m             [0mdata[0m[0;34m[[0m[0mk[0m[0;34m][0m [0;34m=[0m [0mcom[0m[0;34m.[0m[0mapply_if_callable[0m[0;34m([0m[0mv[0m[0;34m,[0m [0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3695[0m         [0;32mreturn[0m [0mdata[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3696[0m [0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/core/common.py[0m in [0;36mapply_if_callable[0;34m(maybe_callable, obj, **kwargs)[0m
[1;32m    339[0m     """
[1;32m    340[0m     [0;32mif[0m [0mcallable[0m[0;34m([0m[0mmaybe_callable[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 341[0;31m         [0;32mreturn[0m [0mmaybe_callable[0m[0;34m([0m[0mobj[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    342[0m [0;34m[0m[0m
[1;32m    343[0m     [0;32mreturn[0m [0mmaybe_callable[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-11-cb9d524492fc>[0m in [0;36m<lambda>[0;34m(x)[0m
[1;32m      4[0m     [0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m     [0;34m.[0m[0mrename[0m[0;34m([0m[0mcolumns[0m [0;34m=[0m [0;34m{[0m[0;36m0[0m [0;34m:[0m [0;34m'Date'[0m[0;34m,[0m [0;36m1[0m[0;34m:[0m [0;34m'Day'[0m[0;34m,[0m [0;36m2[0m [0;34m:[0m [0;34m'Rate'[0m[0;34m,[0m [0;36m3[0m [0;34m:[0m [0;34m'Notes'[0m[0;34m}[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 6[0;31m     [0;34m.[0m[0massign[0m[0;34m([0m[0mRate[0m [0;34m=[0m [0;32mlambda[0m [0mx[0m [0;34m:[0m [0mx[0m[0;34m.[0m[0mRate[0m[0;34m.[0m[0mstr[0m[0;34m.[0m[0mreplace[0m[0;34m([0m[0;34m'[^\d\.]'[0m[0;34m,[0m[0;34m''[0m[0;34m,[0m[0mregex[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m.[0m[0mastype[0m[0;34m([0m[0mfloat[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      7[0m )
[1;32m      8[0m [0mdf[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36mastype[0;34m(self, dtype, copy, errors)[0m
[1;32m   5541[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5542[0m             [0;31m# else, only a single dtype is given[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 5543[0;31m             [0mnew_data[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_mgr[0m[0;34m.[0m[0mastype[0m[0;34m([0m[0mdtype[0m[0;34m=[0m[0mdtype[0m[0;34m,[0m [0mcopy[0m[0;34m=[0m[0mcopy[0m[0;34m,[0m [0merrors[0m[0;34m=[0m[0merrors[0m[0;34m,[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   5544[0m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_constructor[0m[0;34m([0m[0mnew_data[0m[0;34m)[0m[0;34m.[0m[0m__finalize__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mmethod[0m[0;34m=[0m[0;34m"astype"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   5545[0m [0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/core/internals/managers.py[0m in [0;36mastype[0;34m(self, dtype, copy, errors)[0m
[1;32m    593[0m         [0mself[0m[0;34m,[0m [0mdtype[0m[0;34m,[0m [0mcopy[0m[0;34m:[0m [0mbool[0m [0;34m=[0m [0;32mFalse[0m[0;34m,[0m [0merrors[0m[0;34m:[0m [0mstr[0m [0;34m=[0m [0;34m"raise"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    594[0m     ) -> "BlockManager":
[0;32m--> 595[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mapply[0m[0;34m([0m[0;34m"astype"[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mdtype[0m[0;34m,[0m [0mcopy[0m[0;34m=[0m[0mcopy[0m[0;34m,[0m [0merrors[0m[0;34m=[0m[0merrors[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    596[0m [0;34m[0m[0m
[1;32m    597[0m     def convert(

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/core/internals/managers.py[0m in [0;36mapply[0;34m(self, f, align_keys, **kwargs)[0m
[1;32m    404[0m                 [0mapplied[0m [0;34m=[0m [0mb[0m[0;34m.[0m[0mapply[0m[0;34m([0m[0mf[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    405[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 406[0;31m                 [0mapplied[0m [0;34m=[0m [0mgetattr[0m[0;34m([0m[0mb[0m[0;34m,[0m [0mf[0m[0;34m)[0m[0;34m([0m[0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    407[0m             [0mresult_blocks[0m [0;34m=[0m [0m_extend_blocks[0m[0;34m([0m[0mapplied[0m[0;34m,[0m [0mresult_blocks[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    408[0m [0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/core/internals/blocks.py[0m in [0;36mastype[0;34m(self, dtype, copy, errors)[0m
[1;32m    592[0m             [0mvals1d[0m [0;34m=[0m [0mvalues[0m[0;34m.[0m[0mravel[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    593[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 594[0;31m                 [0mvalues[0m [0;34m=[0m [0mastype_nansafe[0m[0;34m([0m[0mvals1d[0m[0;34m,[0m [0mdtype[0m[0;34m,[0m [0mcopy[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    595[0m             [0;32mexcept[0m [0;34m([0m[0mValueError[0m[0;34m,[0m [0mTypeError[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    596[0m                 [0;31m# e.g. astype_nansafe can fail on object-dtype of strings[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/pandas/core/dtypes/cast.py[0m in [0;36mastype_nansafe[0;34m(arr, dtype, copy, skipna)[0m
[1;32m    988[0m     [0;32mif[0m [0mcopy[0m [0;32mor[0m [0mis_object_dtype[0m[0;34m([0m[0marr[0m[0;34m)[0m [0;32mor[0m [0mis_object_dtype[0m[0;34m([0m[0mdtype[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    989[0m         [0;31m# Explicit copy, or required since NumPy can't view from / to object.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 990[0;31m         [0;32mreturn[0m [0marr[0m[0;34m.[0m[0mastype[0m[0;34m([0m[0mdtype[0m[0;34m,[0m [0mcopy[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    991[0m [0;34m[0m[0m
[1;32m    992[0m     [0;32mreturn[0m [0marr[0m[0;34m.[0m[0mview[0m[0;34m([0m[0mdtype[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: could not convert string to float: '770...999.770.....18915489438837957795037'
ValueError: could not convert string to float: '770...999.770.....18915489438837957795037'

