Traceback (most recent call last):
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/guy/miniconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/guy/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df = (
    pd
    .json_normalize(
        response.json(), 
        'items'
        )
)
df.head(5)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mJSONDecodeError[0m                           Traceback (most recent call last)
[0;32m<ipython-input-4-d4065943b639>[0m in [0;36m<module>[0;34m[0m
[1;32m      2[0m     [0mpd[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m     .json_normalize(
[0;32m----> 4[0;31m         [0mresponse[0m[0;34m.[0m[0mjson[0m[0;34m([0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      5[0m         [0;34m'items'[0m[0;34m[0m[0;34m[0m[0m
[1;32m      6[0m         )

[0;32m~/miniconda3/lib/python3.8/site-packages/requests/models.py[0m in [0;36mjson[0;34m(self, **kwargs)[0m
[1;32m    896[0m                     [0;31m# used.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    897[0m                     [0;32mpass[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 898[0;31m         [0;32mreturn[0m [0mcomplexjson[0m[0;34m.[0m[0mloads[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mtext[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    899[0m [0;34m[0m[0m
[1;32m    900[0m     [0;34m@[0m[0mproperty[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/simplejson/__init__.py[0m in [0;36mloads[0;34m(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, use_decimal, **kw)[0m
[1;32m    523[0m             [0mparse_constant[0m [0;32mis[0m [0;32mNone[0m [0;32mand[0m [0mobject_pairs_hook[0m [0;32mis[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m    524[0m             and not use_decimal and not kw):
[0;32m--> 525[0;31m         [0;32mreturn[0m [0m_default_decoder[0m[0;34m.[0m[0mdecode[0m[0;34m([0m[0ms[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    526[0m     [0;32mif[0m [0mcls[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    527[0m         [0mcls[0m [0;34m=[0m [0mJSONDecoder[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/simplejson/decoder.py[0m in [0;36mdecode[0;34m(self, s, _w, _PY3)[0m
[1;32m    368[0m         [0;32mif[0m [0m_PY3[0m [0;32mand[0m [0misinstance[0m[0;34m([0m[0ms[0m[0;34m,[0m [0mbytes[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    369[0m             [0ms[0m [0;34m=[0m [0mstr[0m[0;34m([0m[0ms[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mencoding[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 370[0;31m         [0mobj[0m[0;34m,[0m [0mend[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mraw_decode[0m[0;34m([0m[0ms[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    371[0m         [0mend[0m [0;34m=[0m [0m_w[0m[0;34m([0m[0ms[0m[0;34m,[0m [0mend[0m[0;34m)[0m[0;34m.[0m[0mend[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    372[0m         [0;32mif[0m [0mend[0m [0;34m!=[0m [0mlen[0m[0;34m([0m[0ms[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/lib/python3.8/site-packages/simplejson/decoder.py[0m in [0;36mraw_decode[0;34m(self, s, idx, _w, _PY3)[0m
[1;32m    398[0m             [0;32melif[0m [0mord0[0m [0;34m==[0m [0;36m0xef[0m [0;32mand[0m [0ms[0m[0;34m[[0m[0midx[0m[0;34m:[0m[0midx[0m [0;34m+[0m [0;36m3[0m[0;34m][0m [0;34m==[0m [0;34m'\xef\xbb\xbf'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    399[0m                 [0midx[0m [0;34m+=[0m [0;36m3[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 400[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mscan_once[0m[0;34m([0m[0ms[0m[0;34m,[0m [0midx[0m[0;34m=[0m[0m_w[0m[0;34m([0m[0ms[0m[0;34m,[0m [0midx[0m[0;34m)[0m[0;34m.[0m[0mend[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;31mJSONDecodeError[0m: Expecting value: line 1 column 1 (char 0)
JSONDecodeError: Expecting value: line 1 column 1 (char 0)

